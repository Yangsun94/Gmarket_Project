name: Code Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 코드
      uses: actions/checkout@v4

    - name: Python 설정
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: 코드 품질 도구 설치
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black pylint

    - name: 코드 스타일 검사 (Flake8)
      run: |
        # 기본적인 코드 스타일 검사
        flake8 framework/ tests/ --max-line-length=120 --extend-ignore=E203,W503
      continue-on-error: true

    - name: 코드 포맷 검사 (Black)
      run: |
        # 코드 포맷팅 일관성 검사
        black --check framework/ tests/ --line-length=120
      continue-on-error: true

    - name: 코드 품질 분석 (Pylint)
      run: |
        # 상세한 코드 품질 분석
        pylint framework/ --fail-under=7.0 --max-line-length=120 || true
      continue-on-error: true

    - name: Import 정렬 검사 (isort)
      run: |
        pip install isort
        isort --check-only framework/ tests/ --profile black
      continue-on-error: true

    - name: 품질 검사 요약
      if: always()
      run: |
        echo "✅ 코드 품질 검사 완료"
        echo "상세 결과는 위의 각 단계를 확인하세요"

  security-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 코드
      uses: actions/checkout@v4

    - name: Python 설정
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: 보안 취약점 검사 (Safety)
      run: |
        pip install safety
        pip install -r requirements.txt
        safety check --json || true
      continue-on-error: true

    - name: 보안 검사 요약
      if: always()
      run: |
        echo "✅ 보안 검사 완료"
        echo "알려진 취약점이 있는지 확인했습니다"